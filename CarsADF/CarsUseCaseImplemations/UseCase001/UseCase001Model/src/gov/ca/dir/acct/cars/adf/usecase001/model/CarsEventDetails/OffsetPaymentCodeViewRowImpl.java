package gov.ca.dir.acct.cars.adf.usecase001.model.CarsEventDetails;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 25 14:51:28 PDT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OffsetPaymentCodeViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ReferenceCode {
            public Object get(OffsetPaymentCodeViewRowImpl obj) {
                return obj.getReferenceCode();
            }

            public void put(OffsetPaymentCodeViewRowImpl obj, Object value) {
                obj.setReferenceCode((String)value);
            }
        }
        ,
        RowID {
            public Object get(OffsetPaymentCodeViewRowImpl obj) {
                return obj.getRowID();
            }

            public void put(OffsetPaymentCodeViewRowImpl obj, Object value) {
                obj.setRowID((String)value);
            }
        }
        ,
        ReferenceValue {
            public Object get(OffsetPaymentCodeViewRowImpl obj) {
                return obj.getReferenceValue();
            }

            public void put(OffsetPaymentCodeViewRowImpl obj, Object value) {
                obj.setReferenceValue((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(OffsetPaymentCodeViewRowImpl object);

        public abstract void put(OffsetPaymentCodeViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int REFERENCECODE = AttributesEnum.ReferenceCode.index();
    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int REFERENCEVALUE = AttributesEnum.ReferenceValue.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OffsetPaymentCodeViewRowImpl() {
    }

    /**
     * Gets ReferenceCodeList entity object.
     * @return the ReferenceCodeList
     */
    public EntityImpl getReferenceCodeList() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for REFERENCE_CODE using the alias name ReferenceCode.
     * @return the REFERENCE_CODE
     */
    public String getReferenceCode() {
        return (String) getAttributeInternal(REFERENCECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for REFERENCE_CODE using the alias name ReferenceCode.
     * @param value value to set the REFERENCE_CODE
     */
    public void setReferenceCode(String value) {
        setAttributeInternal(REFERENCECODE, value);
    }

    /**
     * Gets the attribute value for ROWID using the alias name RowID.
     * @return the ROWID
     */
    public String getRowID() {
        return (String) getAttributeInternal(ROWID);
    }

    /**
     * Sets <code>value</code> as attribute value for ROWID using the alias name RowID.
     * @param value value to set the ROWID
     */
    public void setRowID(String value) {
        setAttributeInternal(ROWID, value);
    }

    /**
     * Gets the attribute value for REFERENCE_VALUE using the alias name ReferenceValue.
     * @return the REFERENCE_VALUE
     */
    public String getReferenceValue() {
        return (String) getAttributeInternal(REFERENCEVALUE);
    }

    /**
     * Sets <code>value</code> as attribute value for REFERENCE_VALUE using the alias name ReferenceValue.
     * @param value value to set the REFERENCE_VALUE
     */
    public void setReferenceValue(String value) {
        setAttributeInternal(REFERENCEVALUE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
