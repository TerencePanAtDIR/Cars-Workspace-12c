package gov.ca.dir.acct.cars.adf.service.appmodule.server.serviceinterface;

import gov.ca.dir.acct.cars.adf.service.appmodule.common.serviceinterface.CarsBCDataServicesAMService;
import gov.ca.dir.acct.cars.adf.service.view.common.AccountingEntryStatusViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AccountingEntryViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AccountingReceivableStatusViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AccountingTransactionAssocViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AccountingTransactionViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AcctgTransactEventAssocViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AddressViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AdjustmentViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.ContactMethodViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.CreditViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.DebitViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.EventAssociationViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.EventViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.GlAccountBalanceViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.NoteViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.OrganizationViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.OtherAccountTransViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.ParticipantRoleViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.PartyAssociationViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.PartyRoleFSCustStatusViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.PartyViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.PersonViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.ReceiptViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.ReceivableViewSDO;

import java.lang.reflect.Method;

import java.util.List;

import javax.ejb.Remote;
import javax.ejb.Stateless;

import javax.interceptor.Interceptors;

import oracle.jbo.common.Diagnostic;
import oracle.jbo.common.sdo.SDOHelper;
import oracle.jbo.common.service.types.FindControl;
import oracle.jbo.common.service.types.FindCriteria;
import oracle.jbo.server.svc.ServiceContextInterceptor;
import oracle.jbo.server.svc.ServiceImpl;
import oracle.jbo.service.errors.ServiceException;

import oracle.webservices.annotations.PortableWebService;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 16 15:58:13 PDT 2013
// ---------------------------------------------------------------------
@Interceptors( { ServiceContextInterceptor.class })
@Stateless(name="gov.ca.dir.acct.cars.adf.service.appmodule.common.CarsBCDataServicesAMServiceBean",
    mappedName="CarsBCDataServicesAMServiceBean")
@Remote(CarsBCDataServicesAMService.class)
@PortableWebService(targetNamespace="/gov/ca/dir/acct/cars/adf/service/appmodule/common/",
    serviceName="CarsBCDataServicesAMService", portName="CarsBCDataServicesAMServiceSoapHttpPort",
    endpointInterface="gov.ca.dir.acct.cars.adf.service.appmodule.common.serviceinterface.CarsBCDataServicesAMService")
public class CarsBCDataServicesAMServiceImpl extends ServiceImpl implements CarsBCDataServicesAMService {
    private static boolean _isInited = false;

    /**
     * This is the default constructor (do not remove).
     */
    public CarsBCDataServicesAMServiceImpl() {
        init();
        setApplicationModuleDefName("gov.ca.dir.acct.cars.adf.service.appmodule.CarsBCDataServicesAM");
        setConfigurationName("CarsBCDataServicesAMService");
    }


    /**
     * Generated method. Do not modify. Do initialization in the constructor
     */
    protected void init() {
        if (_isInited) {
            return;
        }
        synchronized (CarsBCDataServicesAMServiceImpl.class) {
            if (_isInited) {
                return;
            }
            try {
                SDOHelper.INSTANCE.defineSchema("gov/ca/dir/acct/cars/adf/service/appmodule/common/serviceinterface/", "CarsBCDataServicesAMService.xsd");
                _isInited = true;
            } catch (Exception ex) {
                Diagnostic.printStackTrace(ex);
            }
        }
    }

    /**
     * createAccountingReceivableStatus: generated method. Do not modify.
     */
    public AccountingReceivableStatusViewSDO createAccountingReceivableStatus(AccountingReceivableStatusViewSDO accountingReceivableStatusView1) throws ServiceException {
        return (AccountingReceivableStatusViewSDO)create(accountingReceivableStatusView1,
                                                         "AccountingReceivableStatusView1");
    }

    /**
     * createAccountingTransactionAssoc: generated method. Do not modify.
     */
    public AccountingTransactionAssocViewSDO createAccountingTransactionAssoc(AccountingTransactionAssocViewSDO accountingTransactionAssocView1) throws ServiceException {
        return (AccountingTransactionAssocViewSDO)create(accountingTransactionAssocView1,
                                                         "AccountingTransactionAssocView1");
    }


    /**
     * createAcctgTransactEventAssoc: generated method. Do not modify.
     */
    public AcctgTransactEventAssocViewSDO createAcctgTransactEventAssoc(AcctgTransactEventAssocViewSDO acctgTransactEventAssocView1) throws ServiceException {
        return (AcctgTransactEventAssocViewSDO)create(acctgTransactEventAssocView1,
                                                      "AcctgTransactEventAssocView1");
    }

    /**
     * createAddress: generated method. Do not modify.
     */
    public AddressViewSDO createAddress(AddressViewSDO addressView1) throws ServiceException {
        return (AddressViewSDO)create(addressView1, "AddressView1");
    }

    /**
     * createAdjustment: generated method. Do not modify.
     */
    public AdjustmentViewSDO createAdjustment(AdjustmentViewSDO adjustmentView1) throws ServiceException {
        return (AdjustmentViewSDO)create(adjustmentView1, "AdjustmentView1");
    }

    /**
     * createContactMethod: generated method. Do not modify.
     */
    public ContactMethodViewSDO createContactMethod(ContactMethodViewSDO contactMethodView1) throws ServiceException {
        return (ContactMethodViewSDO)create(contactMethodView1,
                                            "ContactMethodView1");
    }


    /**
     * createEventAssociation: generated method. Do not modify.
     */
    public EventAssociationViewSDO createEventAssociation(EventAssociationViewSDO eventAssociationView1) throws ServiceException {
        return (EventAssociationViewSDO)create(eventAssociationView1,
                                               "EventAssociationView1");
    }

    /**
     * createEvent: generated method. Do not modify.
     */
    public EventViewSDO createEvent(EventViewSDO eventView1) throws ServiceException {
        return (EventViewSDO)create(eventView1, "EventView1");
    }

    /**
     * createGlAccountBalance: generated method. Do not modify.
     */
    public GlAccountBalanceViewSDO createGlAccountBalance(GlAccountBalanceViewSDO glAccountBalanceView1) throws ServiceException {
        return (GlAccountBalanceViewSDO)create(glAccountBalanceView1,
                                               "GlAccountBalanceView1");
    }

    /**
     * createNote: generated method. Do not modify.
     */
    public NoteViewSDO createNote(NoteViewSDO noteView1) throws ServiceException {
        return (NoteViewSDO)create(noteView1, "NoteView1");
    }

    /**
     * createOrganization: generated method. Do not modify.
     */
    public OrganizationViewSDO createOrganization(OrganizationViewSDO organizationView1) throws ServiceException {
        return (OrganizationViewSDO)create(organizationView1,
                                           "OrganizationView1");
    }

    /**
     * createOtherAccountTrans: generated method. Do not modify.
     */
    public OtherAccountTransViewSDO createOtherAccountTrans(OtherAccountTransViewSDO otherAccountTransView1) throws ServiceException {
        return (OtherAccountTransViewSDO)create(otherAccountTransView1,
                                                "OtherAccountTransView1");
    }

    /**
     * createParticipantRole: generated method. Do not modify.
     */
    public ParticipantRoleViewSDO createParticipantRole(ParticipantRoleViewSDO participantRoleView1) throws ServiceException {
        return (ParticipantRoleViewSDO)create(participantRoleView1,
                                              "ParticipantRoleView1");
    }

    /**
     * createPartyAssociation: generated method. Do not modify.
     */
    public PartyAssociationViewSDO createPartyAssociation(PartyAssociationViewSDO partyAssociationView1) throws ServiceException {
        return (PartyAssociationViewSDO)create(partyAssociationView1,
                                               "PartyAssociationView1");
    }

    /**
     * createParty: generated method. Do not modify.
     */
    public PartyViewSDO createParty(PartyViewSDO partyView1) throws ServiceException {
        return (PartyViewSDO)create(partyView1, "PartyView1");
    }

    /**
     * createPerson: generated method. Do not modify.
     */
    public PersonViewSDO createPerson(PersonViewSDO personView1) throws ServiceException {
        return (PersonViewSDO)create(personView1, "PersonView1");
    }


    /**
     * createAccountingTransaction: generated method. Do not modify.
     */
    public AccountingTransactionViewSDO createAccountingTransaction(AccountingTransactionViewSDO accountingTransactionView1) throws ServiceException {
        return (AccountingTransactionViewSDO)create(accountingTransactionView1,
                                                    "AccountingTransactionView1");
    }

    /**
     * updateAccountingReceivableStatus: generated method. Do not modify.
     */
    public AccountingReceivableStatusViewSDO updateAccountingReceivableStatus(AccountingReceivableStatusViewSDO accountingReceivableStatusView1) throws ServiceException {
        return (AccountingReceivableStatusViewSDO)update(accountingReceivableStatusView1,
                                                         "AccountingReceivableStatusView1");
    }

    /**
     * createCredit: generated method. Do not modify.
     */
    public CreditViewSDO createCredit(CreditViewSDO creditView1) throws ServiceException {
        return (CreditViewSDO)create(creditView1, "CreditView1");
    }

    /**
     * createDebit: generated method. Do not modify.
     */
    public DebitViewSDO createDebit(DebitViewSDO debitView1) throws ServiceException {
        return (DebitViewSDO)create(debitView1, "DebitView1");
    }

    /**
     * createReceivable: generated method. Do not modify.
     */
    public ReceivableViewSDO createReceivable(ReceivableViewSDO receivableView1) throws ServiceException {
        return (ReceivableViewSDO)create(receivableView1, "ReceivableView1");
    }

    /**
     * updateAddress: generated method. Do not modify.
     */
    public AddressViewSDO updateAddress(AddressViewSDO addressView1) throws ServiceException {
        return (AddressViewSDO)update(addressView1, "AddressView1");
    }

    /**
     * updateAdjustment: generated method. Do not modify.
     */
    public AdjustmentViewSDO updateAdjustment(AdjustmentViewSDO adjustmentView1) throws ServiceException {
        return (AdjustmentViewSDO)update(adjustmentView1, "AdjustmentView1");
    }

    /**
     * updateContactMethod: generated method. Do not modify.
     */
    public ContactMethodViewSDO updateContactMethod(ContactMethodViewSDO contactMethodView1) throws ServiceException {
        return (ContactMethodViewSDO)update(contactMethodView1,
                                            "ContactMethodView1");
    }

    /**
     * updateEvent: generated method. Do not modify.
     */
    public EventViewSDO updateEvent(EventViewSDO eventView1) throws ServiceException {
        return (EventViewSDO)update(eventView1, "EventView1");
    }

    /**
     * updateOrganization: generated method. Do not modify.
     */
    public OrganizationViewSDO updateOrganization(OrganizationViewSDO organizationView1) throws ServiceException {
        return (OrganizationViewSDO)update(organizationView1,
                                           "OrganizationView1");
    }

    /**
     * updateOtherAccountTrans: generated method. Do not modify.
     */
    public OtherAccountTransViewSDO updateOtherAccountTrans(OtherAccountTransViewSDO otherAccountTransView1) throws ServiceException {
        return (OtherAccountTransViewSDO)update(otherAccountTransView1,
                                                "OtherAccountTransView1");
    }

    /**
     * updatePerson: generated method. Do not modify.
     */
    public PersonViewSDO updatePerson(PersonViewSDO personView1) throws ServiceException {
        return (PersonViewSDO)update(personView1, "PersonView1");
    }


    /**
     * updateReceivable: generated method. Do not modify.
     */
    public ReceivableViewSDO updateReceivable(ReceivableViewSDO receivableView1) throws ServiceException {
        return (ReceivableViewSDO)update(receivableView1, "ReceivableView1");
    }

    /**
     * updateAcctgTransactEventAssoc: generated method. Do not modify.
     */
    public AcctgTransactEventAssocViewSDO updateAcctgTransactEventAssoc(AcctgTransactEventAssocViewSDO acctgTransactEventAssocView1) throws ServiceException {
        return (AcctgTransactEventAssocViewSDO)update(acctgTransactEventAssocView1,
                                                      "AcctgTransactEventAssocView1");
    }

    /**
     * updateAccountingTransactionAssoc: generated method. Do not modify.
     */
    public AccountingTransactionAssocViewSDO updateAccountingTransactionAssoc(AccountingTransactionAssocViewSDO accountingTransactionAssocView1) throws ServiceException {
        return (AccountingTransactionAssocViewSDO)update(accountingTransactionAssocView1,
                                                         "AccountingTransactionAssocView1");
    }

    /**
     * updateAccountingTransaction: generated method. Do not modify.
     */
    public AccountingTransactionViewSDO updateAccountingTransaction(AccountingTransactionViewSDO accountingTransactionView1) throws ServiceException {
        return (AccountingTransactionViewSDO)update(accountingTransactionView1,
                                                    "AccountingTransactionView1");
    }

    /**
     * updateEventAssociation: generated method. Do not modify.
     */
    public EventAssociationViewSDO updateEventAssociation(EventAssociationViewSDO eventAssociationView1) throws ServiceException {
        return (EventAssociationViewSDO)update(eventAssociationView1,
                                               "EventAssociationView1");
    }

    /**
     * updateParticipantRole: generated method. Do not modify.
     */
    public ParticipantRoleViewSDO updateParticipantRole(ParticipantRoleViewSDO participantRoleView1) throws ServiceException {
        return (ParticipantRoleViewSDO)update(participantRoleView1,
                                              "ParticipantRoleView1");
    }


    /**
     * findContactMethodWithParam: generated method. Do not modify.
     */
    public List<ContactMethodViewSDO> findContactMethodWithParam(FindCriteria findCriteria,
                                                                 String varPartyId,
                                                                 FindControl findControl) throws ServiceException {
        return (List<ContactMethodViewSDO>)find(findCriteria, findControl,
                                                "ContactMethodView1",
                                                ContactMethodViewSDO.class,
                                                "ContactMethodViewCriteria",
                                                new NamedParam[] { new NamedParam("varPartyId",
                                                                                  varPartyId) });
    }

    /**
     * findParticipantRoleWithParam: generated method. Do not modify.
     */
    public List<ParticipantRoleViewSDO> findParticipantRoleWithParam(FindCriteria findCriteria,
                                                                     Integer varEventId,
                                                                     FindControl findControl) throws ServiceException {
        return (List<ParticipantRoleViewSDO>)find(findCriteria, findControl,
                                                  "ParticipantRoleView1",
                                                  ParticipantRoleViewSDO.class,
                                                  "ParticipantRoleViewCriteria",
                                                  new NamedParam[] { new NamedParam("varEventId",
                                                                                    varEventId) });
    }


    /**
     * createAccountingEntry: generated method. Do not modify.
     */
    public AccountingEntryViewSDO createAccountingEntry(AccountingEntryViewSDO accountingEntryView1) throws ServiceException {
        return (AccountingEntryViewSDO)create(accountingEntryView1,
                                              "AccountingEntryView1");
    }

    /**
     * createAccountingEntryStatus: generated method. Do not modify.
     */
    public AccountingEntryStatusViewSDO createAccountingEntryStatus(AccountingEntryStatusViewSDO accountingEntryStatusView1) throws ServiceException {
        return (AccountingEntryStatusViewSDO)create(accountingEntryStatusView1,
                                                    "AccountingEntryStatusView1");
    }

    /**
     * createReceipt: generated method. Do not modify.
     */
    public ReceiptViewSDO createReceipt(ReceiptViewSDO receiptView1) throws ServiceException {
        return (ReceiptViewSDO)create(receiptView1, "ReceiptView1");
    }

    /**
     * updateReceipt: generated method. Do not modify.
     */
    public ReceiptViewSDO updateReceipt(ReceiptViewSDO receiptView1) throws ServiceException {
        return (ReceiptViewSDO)update(receiptView1, "ReceiptView1");
    }

    /**
     * createPartyRoleFSCustStatus: generated method. Do not modify.
     */
    public PartyRoleFSCustStatusViewSDO createPartyRoleFSCustStatus(PartyRoleFSCustStatusViewSDO partyRoleFSCustStatusView1) throws ServiceException {
        return (PartyRoleFSCustStatusViewSDO)create(partyRoleFSCustStatusView1,
                                                    "PartyRoleFSCustStatusView1");
    }
}
