package gov.ca.dir.acct.cars.adf.service.appmodule.server.serviceinterface;

import gov.ca.dir.acct.cars.adf.service.appmodule.CarsBCLookupServicesAMImpl;
import gov.ca.dir.acct.cars.adf.service.appmodule.common.serviceinterface.CarsBCLookupServicesAMService;
import gov.ca.dir.acct.cars.adf.service.view.common.AccountingCodeLookupViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AccountingCodeViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AccountingEntryTypeViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AccountingEntryViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AccountingReceivableStatusViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AccountingTransactionViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AcctgEntryEventAssocRuleViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AcctgTransactEventAssocViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AddressViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AdjustmentTypeViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.AgencySourceViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.ArStatusTypeViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.BillTypeViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.ContactMethodTypeViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.ContactMethodViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.CreditRuleLookupViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.DebitRuleLookupViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.EventLookupViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.EventTypeAssocRulesLookupSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.EventTypeAssociationRuleViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.EventTypeLookupViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.EventTypeViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.FiscalPeriodLookupViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.FiscalPeriodViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.FundAllocationViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.FundViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.GlAccountAssocRuleLookupViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.GlAccountAssociationRuleViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.GlAccountTypeViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.GlAccountViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.IndexCodeViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.NoteTypeViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.OtherTransactionTypeViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.ParticipantRoleTypeViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.ParticipantRoleViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.PartyAssociationTypeViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.PcaCodeViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.ProgramUnitViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.ReceiptTypeViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.ReferenceCodeListLookupViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.RevenueSourceCodeViewSDO;
import gov.ca.dir.acct.cars.adf.service.view.common.TestViewSDO;

import java.lang.reflect.Method;

import java.math.BigDecimal;

import java.sql.Date;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.ejb.Remote;
import javax.ejb.Stateless;

import javax.interceptor.Interceptors;

import oracle.jbo.common.Diagnostic;
import oracle.jbo.common.sdo.SDOHelper;
import oracle.jbo.common.service.types.FindControl;
import oracle.jbo.common.service.types.FindCriteria;
import oracle.jbo.server.svc.ServiceContextInterceptor;
import oracle.jbo.server.svc.ServiceImpl;
import oracle.jbo.service.errors.ServiceException;

import oracle.webservices.annotations.PortableWebService;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 30 12:17:41 PDT 2016
// ---------------------------------------------------------------------
@Interceptors( { ServiceContextInterceptor.class })
@Stateless(name="gov.ca.dir.acct.cars.adf.service.appmodule.common.CarsBCLookupServicesAMServiceBean",
    mappedName="CarsBCLookupServicesAMServiceBean")
@Remote(CarsBCLookupServicesAMService.class)
@PortableWebService(targetNamespace="/gov/ca/dir/acct/cars/adf/service/appmodule/common/",
    serviceName="CarsBCLookupServicesAMService", portName="CarsBCLookupServicesAMServiceSoapHttpPort",
    endpointInterface="gov.ca.dir.acct.cars.adf.service.appmodule.common.serviceinterface.CarsBCLookupServicesAMService")
public class CarsBCLookupServicesAMServiceImpl extends ServiceImpl implements CarsBCLookupServicesAMService {
    private static boolean _isInited = false;


    private static final Map _map = new HashMap();

    /**
     * This is the default constructor (do not remove).
     */
    public CarsBCLookupServicesAMServiceImpl() {
        init();
        setApplicationModuleDefName("gov.ca.dir.acct.cars.adf.service.appmodule.CarsBCLookupServicesAM");
        setConfigurationName("CarsBCLookupServicesAMService");
    }


    /**
     * Generated method. Do not modify. Do initialization in the constructor
     */
    protected void init() {
        if (_isInited) {
            return;
        }
        synchronized (CarsBCLookupServicesAMServiceImpl.class) {
            if (_isInited) {
                return;
            }
            try {
                SDOHelper.INSTANCE.defineSchema("gov/ca/dir/acct/cars/adf/service/appmodule/common/serviceinterface/", "CarsBCLookupServicesAMService.xsd");
                _map.put("findFiscalPeriodIdWithParams",
                         CarsBCLookupServicesAMImpl.class.getMethod("findFiscalPeriodIdWithParams",
                                                                    new Class[] { String.class }));
                _map.put("recheckReferenceDocument",
                         CarsBCLookupServicesAMImpl.class.getMethod("recheckReferenceDocument",
                                                                    new Class[] { String.class,
                                                                                  int.class,
                                                                                  long.class }));
                _map.put("findSOARecipient",
                         CarsBCLookupServicesAMImpl.class.getMethod("findSOARecipient",
                                                                    new Class[] { }));
                _map.put("validateAddress",
                         CarsBCLookupServicesAMImpl.class.getMethod("validateAddress",
                                                                    new Class[] { String.class,
                                                                                  String.class,
                                                                                  String.class,
                                                                                  String.class,
                                                                                  String.class }));
                _isInited = true;
            } catch (Exception ex) {
                Diagnostic.printStackTrace(ex);
            }
        }
    }

    /**
     * findAccountingCode: generated method. Do not modify.
     */
    public List<AccountingCodeViewSDO> findAccountingCode(FindCriteria findCriteria,
                                                          FindControl findControl) throws ServiceException {
        return (List<AccountingCodeViewSDO>)find(findCriteria, findControl,
                                                 "AccountingCodeView1",
                                                 AccountingCodeViewSDO.class);
    }

    /**
     * findAccountingReceivableStatus: generated method. Do not modify.
     */
    public List<AccountingReceivableStatusViewSDO> findAccountingReceivableStatus(FindCriteria findCriteria,
                                                                                  FindControl findControl) throws ServiceException {
        return (List<AccountingReceivableStatusViewSDO>)find(findCriteria,
                                                             findControl,
                                                             "AccountingReceivableStatusView1",
                                                             AccountingReceivableStatusViewSDO.class);
    }

    /**
     * findAcctgEntryEventAssocRule: generated method. Do not modify.
     */
    public List<AcctgEntryEventAssocRuleViewSDO> findAcctgEntryEventAssocRule(FindCriteria findCriteria,
                                                                              FindControl findControl) throws ServiceException {
        return (List<AcctgEntryEventAssocRuleViewSDO>)find(findCriteria,
                                                           findControl,
                                                           "AcctgEntryEventAssocRuleView1",
                                                           AcctgEntryEventAssocRuleViewSDO.class);
    }

    /**
     * findAdjustmentType: generated method. Do not modify.
     */
    public List<AdjustmentTypeViewSDO> findAdjustmentType(FindCriteria findCriteria,
                                                          FindControl findControl) throws ServiceException {
        return (List<AdjustmentTypeViewSDO>)find(findCriteria, findControl,
                                                 "AdjustmentTypeView1",
                                                 AdjustmentTypeViewSDO.class);
    }

    /**
     * findAgencySource: generated method. Do not modify.
     */
    public List<AgencySourceViewSDO> findAgencySource(FindCriteria findCriteria,
                                                      FindControl findControl) throws ServiceException {
        return (List<AgencySourceViewSDO>)find(findCriteria, findControl,
                                               "AgencySourceView1",
                                               AgencySourceViewSDO.class);
    }

    /**
     * findArStatusType: generated method. Do not modify.
     */
    public List<ArStatusTypeViewSDO> findArStatusType(FindCriteria findCriteria,
                                                      FindControl findControl) throws ServiceException {
        return (List<ArStatusTypeViewSDO>)find(findCriteria, findControl,
                                               "ArStatusTypeView1",
                                               ArStatusTypeViewSDO.class);
    }

    /**
     * findBillType: generated method. Do not modify.
     */
    public List<BillTypeViewSDO> findBillType(FindCriteria findCriteria,
                                              FindControl findControl) throws ServiceException {
        return (List<BillTypeViewSDO>)find(findCriteria, findControl,
                                           "BillTypeView1",
                                           BillTypeViewSDO.class);
    }

    /**
     * findContactMethodType: generated method. Do not modify.
     */
    public List<ContactMethodTypeViewSDO> findContactMethodType(FindCriteria findCriteria,
                                                                FindControl findControl) throws ServiceException {
        return (List<ContactMethodTypeViewSDO>)find(findCriteria, findControl,
                                                    "ContactMethodTypeView1",
                                                    ContactMethodTypeViewSDO.class);
    }

    /**
     * findEventTypeAssociationRule: generated method. Do not modify.
     */
    public List<EventTypeAssociationRuleViewSDO> findEventTypeAssociationRule(FindCriteria findCriteria,
                                                                              FindControl findControl) throws ServiceException {
        return (List<EventTypeAssociationRuleViewSDO>)find(findCriteria,
                                                           findControl,
                                                           "EventTypeAssociationRuleView1",
                                                           EventTypeAssociationRuleViewSDO.class);
    }

    /**
     * findEventType: generated method. Do not modify.
     */
    public List<EventTypeViewSDO> findEventType(FindCriteria findCriteria,
                                                FindControl findControl) throws ServiceException {
        return (List<EventTypeViewSDO>)find(findCriteria, findControl,
                                            "EventTypeView1",
                                            EventTypeViewSDO.class);
    }

    /**
     * findFiscalPeriod: generated method. Do not modify.
     */
    public List<FiscalPeriodViewSDO> findFiscalPeriod(FindCriteria findCriteria,
                                                      FindControl findControl) throws ServiceException {
        return (List<FiscalPeriodViewSDO>)find(findCriteria, findControl,
                                               "FiscalPeriodView1",
                                               FiscalPeriodViewSDO.class);
    }

    /**
     * findFundAllocation: generated method. Do not modify.
     */
    public List<FundAllocationViewSDO> findFundAllocation(FindCriteria findCriteria,
                                                          FindControl findControl) throws ServiceException {
        return (List<FundAllocationViewSDO>)find(findCriteria, findControl,
                                                 "FundAllocationView1",
                                                 FundAllocationViewSDO.class);
    }

    /**
     * findFund: generated method. Do not modify.
     */
    public List<FundViewSDO> findFund(FindCriteria findCriteria,
                                      FindControl findControl) throws ServiceException {
        return (List<FundViewSDO>)find(findCriteria, findControl, "FundView1",
                                       FundViewSDO.class);
    }

    /**
     * findGlAccountAssociationRule: generated method. Do not modify.
     */
    public List<GlAccountAssociationRuleViewSDO> findGlAccountAssociationRule(FindCriteria findCriteria,
                                                                              FindControl findControl) throws ServiceException {
        return (List<GlAccountAssociationRuleViewSDO>)find(findCriteria,
                                                           findControl,
                                                           "GlAccountAssociationRuleView1",
                                                           GlAccountAssociationRuleViewSDO.class);
    }

    /**
     * findGlAccountType: generated method. Do not modify.
     */
    public List<GlAccountTypeViewSDO> findGlAccountType(FindCriteria findCriteria,
                                                        FindControl findControl) throws ServiceException {
        return (List<GlAccountTypeViewSDO>)find(findCriteria, findControl,
                                                "GlAccountTypeView1",
                                                GlAccountTypeViewSDO.class);
    }

    /**
     * findGlAccount: generated method. Do not modify.
     */
    public List<GlAccountViewSDO> findGlAccount(FindCriteria findCriteria,
                                                FindControl findControl) throws ServiceException {
        return (List<GlAccountViewSDO>)find(findCriteria, findControl,
                                            "GlAccountView1",
                                            GlAccountViewSDO.class);
    }

    /**
     * findIndexCode: generated method. Do not modify.
     */
    public List<IndexCodeViewSDO> findIndexCode(FindCriteria findCriteria,
                                                FindControl findControl) throws ServiceException {
        return (List<IndexCodeViewSDO>)find(findCriteria, findControl,
                                            "IndexCodeView1",
                                            IndexCodeViewSDO.class);
    }

    /**
     * findOtherTransactionType: generated method. Do not modify.
     */
    public List<OtherTransactionTypeViewSDO> findOtherTransactionType(FindCriteria findCriteria,
                                                                      FindControl findControl) throws ServiceException {
        return (List<OtherTransactionTypeViewSDO>)find(findCriteria,
                                                       findControl,
                                                       "OtherTransactionTypeView1",
                                                       OtherTransactionTypeViewSDO.class);
    }

    /**
     * findParticipantRoleType: generated method. Do not modify.
     */
    public List<ParticipantRoleTypeViewSDO> findParticipantRoleType(FindCriteria findCriteria,
                                                                    FindControl findControl) throws ServiceException {
        return (List<ParticipantRoleTypeViewSDO>)find(findCriteria,
                                                      findControl,
                                                      "ParticipantRoleTypeView1",
                                                      ParticipantRoleTypeViewSDO.class);
    }

    /**
     * findPartyAssociationType: generated method. Do not modify.
     */
    public List<PartyAssociationTypeViewSDO> findPartyAssociationType(FindCriteria findCriteria,
                                                                      FindControl findControl) throws ServiceException {
        return (List<PartyAssociationTypeViewSDO>)find(findCriteria,
                                                       findControl,
                                                       "PartyAssociationTypeView1",
                                                       PartyAssociationTypeViewSDO.class);
    }

    /**
     * findPcaCode: generated method. Do not modify.
     */
    public List<PcaCodeViewSDO> findPcaCode(FindCriteria findCriteria,
                                            FindControl findControl) throws ServiceException {
        return (List<PcaCodeViewSDO>)find(findCriteria, findControl,
                                          "PcaCodeView1",
                                          PcaCodeViewSDO.class);
    }

    /**
     * findProgramUnit: generated method. Do not modify.
     */
    public List<ProgramUnitViewSDO> findProgramUnit(FindCriteria findCriteria,
                                                    FindControl findControl) throws ServiceException {
        return (List<ProgramUnitViewSDO>)find(findCriteria, findControl,
                                              "ProgramUnitView1",
                                              ProgramUnitViewSDO.class);
    }

    /**
     * findReceiptType: generated method. Do not modify.
     */
    public List<ReceiptTypeViewSDO> findReceiptType(FindCriteria findCriteria,
                                                    FindControl findControl) throws ServiceException {
        return (List<ReceiptTypeViewSDO>)find(findCriteria, findControl,
                                              "ReceiptTypeView1",
                                              ReceiptTypeViewSDO.class);
    }

    /**
     * findRevenueSourceCode: generated method. Do not modify.
     */
    public List<RevenueSourceCodeViewSDO> findRevenueSourceCode(FindCriteria findCriteria,
                                                                FindControl findControl) throws ServiceException {
        return (List<RevenueSourceCodeViewSDO>)find(findCriteria, findControl,
                                                    "RevenueSourceCodeView1",
                                                    RevenueSourceCodeViewSDO.class);
    }

    /**
     * findTestView1TestViewCriteria: generated method. Do not modify.
     */
    public List<TestViewSDO> findTestView1TestViewCriteria(FindCriteria findCriteria,
                                                           String varIndexCode,
                                                           FindControl findControl) throws ServiceException {
        return (List<TestViewSDO>)find(findCriteria, findControl, "TestView1",
                                       TestViewSDO.class, "TestViewCriteria",
                                       new NamedParam[] { new NamedParam("varIndexCode",
                                                                         varIndexCode) });
    }

    /**
     * findEventTypeWithParams: generated method. Do not modify.
     */
    public List<EventTypeLookupViewSDO> findEventTypeWithParams(FindCriteria findCriteria,
                                                                String varEventTypeCode,
                                                                String varProgramUnitCode,
                                                                FindControl findControl) throws ServiceException {
        return (List<EventTypeLookupViewSDO>)find(findCriteria, findControl,
                                                  "EventTypeLookupView1",
                                                  EventTypeLookupViewSDO.class,
                                                  "EventTypeLookupViewCriteria",
                                                  new NamedParam[] { new NamedParam("varEventTypeCode",
                                                                                    varEventTypeCode),
                                                                     new NamedParam("varProgramUnitCode",
                                                                                    varProgramUnitCode) });
    }

    /**
     * findEventTypeAssocRuleWithParams: generated method. Do not modify.
     */
    public List<EventTypeAssocRulesLookupSDO> findEventTypeAssocRuleWithParams(FindCriteria findCriteria,
                                                                               String varFromEventType,
                                                                               String varToEventType,
                                                                               FindControl findControl) throws ServiceException {
        return (List<EventTypeAssocRulesLookupSDO>)find(findCriteria,
                                                        findControl,
                                                        "EventTypeAssocRulesLookup1",
                                                        EventTypeAssocRulesLookupSDO.class,
                                                        "EventTypeAssocRulesLookupCriteria",
                                                        new NamedParam[] { new NamedParam("varFromEventType",
                                                                                          varFromEventType),
                                                                           new NamedParam("varToEventType",
                                                                                          varToEventType) });
    }


    /**
     * findFiscalPeriodWithParams: generated method. Do not modify.
     */
    public List<FiscalPeriodLookupViewSDO> findFiscalPeriodWithParams(FindCriteria findCriteria,
                                                                      Date varFiscalDate,
                                                                      FindControl findControl) throws ServiceException {
        return (List<FiscalPeriodLookupViewSDO>)find(findCriteria, findControl,
                                                     "FiscalPeriodLookupView1",
                                                     FiscalPeriodLookupViewSDO.class,
                                                     "FiscalPeriodLookupViewCriteria",
                                                     new NamedParam[] { new NamedParam("varFiscalDate",
                                                                                       varFiscalDate) });
    }

    /**
     * findCreditRuleWithParams: generated method. Do not modify.
     */
    public List<CreditRuleLookupViewSDO> findCreditRuleWithParams(FindCriteria findCriteria,
                                                                  Integer varAcctgEntryTypeId,
                                                                  FindControl findControl) throws ServiceException {
        return (List<CreditRuleLookupViewSDO>)find(findCriteria, findControl,
                                                   "CreditRuleLookupView1",
                                                   CreditRuleLookupViewSDO.class,
                                                   "CreditRuleLookupViewCriteria",
                                                   new NamedParam[] { new NamedParam("varAcctgEntryTypeId",
                                                                                     varAcctgEntryTypeId) });
    }

    /**
     * findGlAccountAssocRuleWithParams: generated method. Do not modify.
     */
    public List<GlAccountAssocRuleLookupViewSDO> findGlAccountAssocRuleWithParams(FindCriteria findCriteria,
                                                                                  String varAcctgEntryTypeId,
                                                                                  FindControl findControl) throws ServiceException {
        return (List<GlAccountAssocRuleLookupViewSDO>)find(findCriteria,
                                                           findControl,
                                                           "GlAccountAssocRuleLookupView1",
                                                           GlAccountAssocRuleLookupViewSDO.class,
                                                           "GlAccountAssocRuleLookupViewCriteria",
                                                           new NamedParam[] { new NamedParam("varAcctgEntryTypeId",
                                                                                             varAcctgEntryTypeId) });
    }

    /**
     * findDebitRuleWithParams: generated method. Do not modify.
     */
    public List<DebitRuleLookupViewSDO> findDebitRuleWithParams(FindCriteria findCriteria,
                                                                Integer varAcctgEntryTypeId,
                                                                FindControl findControl) throws ServiceException {
        return (List<DebitRuleLookupViewSDO>)find(findCriteria, findControl,
                                                  "DebitRuleLookupView1",
                                                  DebitRuleLookupViewSDO.class,
                                                  "DebitRuleLookupViewCriteria",
                                                  new NamedParam[] { new NamedParam("varAcctgEntryTypeId",
                                                                                    varAcctgEntryTypeId) });
    }

    /**
     * findAcctgTransactEventAssocWithParams: generated method. Do not modify.
     */
    public List<AcctgTransactEventAssocViewSDO> findAcctgTransactEventAssocWithParams(FindCriteria findCriteria,
                                                                                      Integer varEventId,
                                                                                      FindControl findControl) throws ServiceException {
        return (List<AcctgTransactEventAssocViewSDO>)find(findCriteria,
                                                          findControl,
                                                          "AcctgTransactEventAssocView1",
                                                          AcctgTransactEventAssocViewSDO.class,
                                                          "AcctgTransactEventAssocViewCriteria",
                                                          new NamedParam[] { new NamedParam("varEventId",
                                                                                            varEventId) });
    }


    /**
     * findNoteTypeWithParams: generated method. Do not modify.
     */
    public List<NoteTypeViewSDO> findNoteTypeWithParams(FindCriteria findCriteria,
                                                        String varNoteTypeCode,
                                                        FindControl findControl) throws ServiceException {
        return (List<NoteTypeViewSDO>)find(findCriteria, findControl,
                                           "NoteTypeView1",
                                           NoteTypeViewSDO.class,
                                           "NoteTypeViewCriteria",
                                           new NamedParam[] { new NamedParam("varNoteTypeCode",
                                                                             varNoteTypeCode) });
    }

    /**
     * findContactMethodWithParam: generated method. Do not modify.
     */
    public List<ContactMethodViewSDO> findContactMethodWithParam(FindCriteria findCriteria,
                                                                 String varPartyId,
                                                                 FindControl findControl) throws ServiceException {
        return (List<ContactMethodViewSDO>)find(findCriteria, findControl,
                                                "ContactMethodView1",
                                                ContactMethodViewSDO.class,
                                                "ContactMethodViewCriteria",
                                                new NamedParam[] { new NamedParam("varPartyId",
                                                                                  varPartyId) });
    }

    /**
     * findAccountingTransactionWithParams: generated method. Do not modify.
     */
    public List<AccountingTransactionViewSDO> findAccountingTransactionWithParams(FindCriteria findCriteria,
                                                                                  String varTransactionId,
                                                                                  FindControl findControl) throws ServiceException {
        return (List<AccountingTransactionViewSDO>)find(findCriteria,
                                                        findControl,
                                                        "AccountingTransactionView1",
                                                        AccountingTransactionViewSDO.class,
                                                        "AccountingTransactionViewCriteria",
                                                        new NamedParam[] { new NamedParam("varTransactionId",
                                                                                          varTransactionId) });
    }


    /**
     * findParticipantRoleWithParams: generated method. Do not modify.
     */
    public List<ParticipantRoleViewSDO> findParticipantRoleWithParams(FindCriteria findCriteria,
                                                                      Integer varEventId,
                                                                      String varPartyRoleTypeCode,
                                                                      FindControl findControl) throws ServiceException {
        return (List<ParticipantRoleViewSDO>)find(findCriteria, findControl,
                                                  "ParticipantRoleView1",
                                                  ParticipantRoleViewSDO.class,
                                                  "ParticipantRoleViewCriteria",
                                                  new NamedParam[] { new NamedParam("varEventId",
                                                                                    varEventId),
                                                                     new NamedParam("varPartyRoleTypeCode",
                                                                                    varPartyRoleTypeCode) });
    }

    /**
     * findAddressWithParams: generated method. Do not modify.
     */
    public List<AddressViewSDO> findAddressWithParams(FindCriteria findCriteria,
                                                      String varPartyId,
                                                      FindControl findControl) throws ServiceException {
        return (List<AddressViewSDO>)find(findCriteria, findControl,
                                          "AddressView1", AddressViewSDO.class,
                                          "AddressViewCriteria",
                                          new NamedParam[] { new NamedParam("varPartyId",
                                                                            varPartyId) });
    }


    /**
     * findReferenceCodeListWithParams: generated method. Do not modify.
     */
    public List<ReferenceCodeListLookupViewSDO> findReferenceCodeListWithParams(FindCriteria findCriteria,
                                                                                String varReferenceValue,
                                                                                String varDomainName,
                                                                                FindControl findControl) throws ServiceException {
        return (List<ReferenceCodeListLookupViewSDO>)find(findCriteria,
                                                          findControl,
                                                          "ReferenceCodeListLookupView1",
                                                          ReferenceCodeListLookupViewSDO.class,
                                                          "ReferenceCodeListLookupViewCriteria",
                                                          new NamedParam[] { new NamedParam("varReferenceValue",
                                                                                            varReferenceValue),
                                                                             new NamedParam("varDomainName",
                                                                                            varDomainName) });
    }

    /**
     * findEventWithParams: generated method. Do not modify.
     */
    public List<EventLookupViewSDO> findEventWithParams(FindCriteria findCriteria,
                                                        String varEventId,
                                                        String varCurrentDocument,
                                                        String varReferenceDocument,
                                                        FindControl findControl) throws ServiceException {
        return (List<EventLookupViewSDO>)find(findCriteria, findControl,
                                              "EventLookupView1",
                                              EventLookupViewSDO.class,
                                              "EventLookupViewCriteria",
                                              new NamedParam[] { new NamedParam("varEventId",
                                                                                varEventId),
                                                                 new NamedParam("varCurrentDocument",
                                                                                varCurrentDocument),
                                                                 new NamedParam("varReferenceDocument",
                                                                                varReferenceDocument) });
    }

    /**
     * findAccountingEntryType: generated method. Do not modify.
     */
    public List<AccountingEntryTypeViewSDO> findAccountingEntryType(FindCriteria findCriteria,
                                                                    FindControl findControl) throws ServiceException {
        return (List<AccountingEntryTypeViewSDO>)find(findCriteria,
                                                      findControl,
                                                      "AccountingEntryTypeView1",
                                                      AccountingEntryTypeViewSDO.class);
    }

    /**
     * findAccountingEntryTypeWithParams: generated method. Do not modify.
     */
    public List<AccountingEntryTypeViewSDO> findAccountingEntryTypeWithParams(FindCriteria findCriteria,
                                                                              String varAcctgEntryTypeId,
                                                                              FindControl findControl) throws ServiceException {
        return (List<AccountingEntryTypeViewSDO>)find(findCriteria,
                                                      findControl,
                                                      "AccountingEntryTypeView1",
                                                      AccountingEntryTypeViewSDO.class,
                                                      "AccountingEntryTypeViewCriteria",
                                                      new NamedParam[] { new NamedParam("varAcctgEntryTypeId",
                                                                                        varAcctgEntryTypeId) });
    }

    /**
     * findAccountingEntryTypeReversal: generated method. Do not modify.
     */
    public List<AccountingEntryTypeViewSDO> findAccountingEntryTypeReversal(FindCriteria findCriteria,
                                                                            String varAcctgEntryTypeCode,
                                                                            FindControl findControl) throws ServiceException {
        return (List<AccountingEntryTypeViewSDO>)find(findCriteria,
                                                      findControl,
                                                      "AccountingEntryTypeView1",
                                                      AccountingEntryTypeViewSDO.class,
                                                      "AccountingEntryTypeReversalViewCriteria",
                                                      new NamedParam[] { new NamedParam("varAcctgEntryTypeCode",
                                                                                        varAcctgEntryTypeCode) });
    }


    /**
     * findAccountingEntryWithParams: generated method. Do not modify.
     */
    public List<AccountingEntryViewSDO> findAccountingEntryWithParams(FindCriteria findCriteria,
                                                                      String varAcctgTransactionId,
                                                                      FindControl findControl) throws ServiceException {
        return (List<AccountingEntryViewSDO>)find(findCriteria, findControl,
                                                  "AccountingEntryView1",
                                                  AccountingEntryViewSDO.class,
                                                  "AccountingEntryViewCriteria",
                                                  new NamedParam[] { new NamedParam("varAcctgTransactionId",
                                                                                    varAcctgTransactionId) });
    }

    /**
     * findAccountingCodeWithParams: generated method. Do not modify.
     */
    public List<AccountingCodeLookupViewSDO> findAccountingCodeWithParams(FindCriteria findCriteria,
                                                                          String varAgencySourceCode,
                                                                          String varRevenueSourceCode,
                                                                          String varIndexCode,
                                                                          String varEventTypeCode,
                                                                          String varEventTypeId,
                                                                          String varProgramUnitCode,
                                                                          String varTransactionCode,
                                                                          String varFund,
                                                                          String varFiscalPeriodId,
                                                                          FindControl findControl) throws ServiceException {
        return (List<AccountingCodeLookupViewSDO>)find(findCriteria,
                                                       findControl,
                                                       "AccountingCodeLookupView1",
                                                       AccountingCodeLookupViewSDO.class,
                                                       "AccountingCodeLookupViewCriteria",
                                                       new NamedParam[] { new NamedParam("varAgencySourceCode",
                                                                                         varAgencySourceCode),
                                                                          new NamedParam("varRevenueSourceCode",
                                                                                         varRevenueSourceCode),
                                                                          new NamedParam("varIndexCode",
                                                                                         varIndexCode),
                                                                          new NamedParam("varEventTypeCode",
                                                                                         varEventTypeCode),
                                                                          new NamedParam("varEventTypeId",
                                                                                         varEventTypeId),
                                                                          new NamedParam("varProgramUnitCode",
                                                                                         varProgramUnitCode),
                                                                          new NamedParam("varTransactionCode",
                                                                                         varTransactionCode),
                                                                          new NamedParam("varFund",
                                                                                         varFund),
                                                                          new NamedParam("varFiscalPeriodId",
                                                                                         varFiscalPeriodId) });
    }


    /**
     * findFiscalPeriodIdWithParams: generated method. Do not modify.
     */
    public String findFiscalPeriodIdWithParams(String rootDocument) throws ServiceException {
        return (String)invokeCustom((Method)_map.get("findFiscalPeriodIdWithParams"),
                                    new Object[] { rootDocument },
                                    new String[] { null }, false);
    }

    /**
     * recheckReferenceDocument: generated method. Do not modify.
     */
    public BigDecimal recheckReferenceDocument(String referenceDocument,
                                               int processNum,
                                               long waitTime) throws ServiceException {
        return (BigDecimal)invokeCustom((Method)_map.get("recheckReferenceDocument"),
                                        new Object[] { referenceDocument,
                                                       processNum, waitTime },
                                        new String[] { null, null, null },
                                        false);
    }


    /**
     * findReferenceCodeListLookupView: generated method. Do not modify.
     */
    public List<ReferenceCodeListLookupViewSDO> findReferenceCodeListLookupView(FindCriteria findCriteria,
                                                                                FindControl findControl) throws ServiceException {
        return (List<ReferenceCodeListLookupViewSDO>)find(findCriteria,
                                                          findControl,
                                                          "ReferenceCodeListLookupView1",
                                                          ReferenceCodeListLookupViewSDO.class);
    }


    /**
     * validateAddress: generated method. Do not modify.
     */
    public String validateAddress(String state, String zipCode,
                                  String province, String postalCode,
                                  String countryAbbreviation) throws ServiceException {
        return (String)invokeCustom((Method)_map.get("validateAddress"),
                                    new Object[] { state, zipCode, province,
                                                   postalCode,
                                                   countryAbbreviation },
                                    new String[] { null, null, null, null,
                                                   null }, false);
    }

    /**
     * findSOARecipient: generated method. Do not modify.
     */
    public List<ReferenceCodeListLookupViewSDO> findSOARecipient(FindCriteria findCriteria,
                                                                 FindControl findControl) throws ServiceException {
        return (List<ReferenceCodeListLookupViewSDO>)find(findCriteria,
                                                          findControl,
                                                          "ReferenceCodeListLookupView1",
                                                          ReferenceCodeListLookupViewSDO.class,
                                                          "SOAEmailLookupViewCriteria");
    }
}
